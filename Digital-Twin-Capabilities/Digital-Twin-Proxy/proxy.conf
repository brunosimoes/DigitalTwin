server {
  listen 80;
  listen [::]:80;
  client_body_buffer_size 2000M; 
  client_max_body_size 2000M;

  # Docker DNS
  resolver 127.0.0.11 ipv6=off; # valid=10s;

  set $upstream_proto "https";

  # List of upstreams for each container that is used in locations
  @UPSTREAM_LIST

  # To forward the  original protocol (HTTP or HTTPS)
  proxy_set_header X-Forwarded-Proto $scheme;

  # To forward the original client's IP address 
  proxy_set_header X-Forwarded-For $proxy_protocol_addr;

  # To forward the original host requested by the client
  proxy_set_header Host $host;

  # List of location mappings
  @LOCATION_LIST

  location / {
    # Only match requests that do not end with a file extension
    if ($request_uri !~* \.\w+$) {
        rewrite ^/(.*)$ / break;
    }
    proxy_set_header X-Original-URI $request_uri;
    proxy_pass http://$upstream_@ENTRY_POINT;
  }

  error_page   500 502 503 504  /50x.html;
  location = /50x.html {
    root   /data/www; 
  }
}
